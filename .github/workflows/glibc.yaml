name: glibc

on:
  workflow_dispatch:
    inputs:
      version:
        description: The version of glibc
        required: true
        default: "2.35"
      kernel_url:
        description: The source tarball of linux kernel
        required: true
        default: "https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.17.2.tar.xz"
      kernel_headers:
        description: The path to install linux kernel headers
        required: true
        default: kernel
      dist:
        description: The path to install
        required: true
        default: glibc

jobs:
  glibc:
    strategy:
      matrix:
        include:
          - name: linux_amd64
            os: ubuntu-latest

    name: "${{ github.job }} ${{ matrix.name }}"
    runs-on: ${{ matrix.os }}
    continue-on-error: true

    env:
      VERSION: ${{ github.event.inputs.version }}
      KERNEL_URL: ${{ github.event.inputs.kernel_url }}
      KERNEL_HEADERS: /opt/${{ github.event.inputs.kernel_headers }}
      SRC: ${{ github.workspace }}/src
      BUILD: ${{ github.workspace }}/build
      DIST: /opt/${{ github.event.inputs.dist }}
      CONFIGURE: >-
        --prefix=/usr
        --with-headers=/opt/${{ github.event.inputs.kernel_headers }}/include
        --enable-kernel=4.15
        --without-selinux
        libc_cv_slibdir=${{ github.event.inputs.dist }}/usr/lib
      EXTRA_CONFIGURE: ${{ matrix.EXTRA_CONFIGURE }}

    steps:
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores
        
      - name: Prepare kernel header
        run: |
          curl -sSL ${{ env.KERNEL_URL }} -o kernel.tar.xz
          tar -xJf kernel.tar.xz
          cd linux*
          make headers_install INSTALL_HDR_PATH=${{ env.KERNEL_HEADERS }}
    
      - name: Download sources
        run: |
          curl -sSL https://ftp.gnu.org/gnu/glibc/glibc-${{ env.VERSION }}.tar.xz -o glibc.tar.xz
          tar -xJf glibc.tar.xz
          mv glibc-${{ env.VERSION }} ${{ env.SRC }}
          ls
          
      - name: Create build directory
        run: |
          mkdir -p ${{ env.BUILD }}
          mkdir -p ${{ env.DIST }}

      - name: Configure
        working-directory: ${{ env.BUILD }}
        run: |
          ${{ env.SRC }}/configure ${{ env.CONFIGURE }}

      - name: Build
        working-directory: ${{ env.BUILD }}
        run: |
          make -j ${{ steps.cpu-cores.outputs.count }}
      
      - name: Install
        working-directory: ${{ env.BUILD }}
        run: |
          make DESTDIR=${{ env.DIST }} install
      
      - name: Archive
        working-directory: /opt
        run: |
          tar -cJvf /tmp/archive.tar.xz ${{ github.event.inputs.dist }}
          tar -cJvf /tmp/glibc_include.tar.xz -C ${{ github.event.inputs.dist }} usr/include
         
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-${{ env.VERSION }}-${{ matrix.name }}
          path: /tmp/archive.tar.xz
          retention-days: 3
         
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-${{ env.VERSION }}-${{ matrix.name }}-include
          path: /tmp/glibc_include.tar.xz
          retention-days: 3
